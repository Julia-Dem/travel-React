{"version":3,"sources":["utils/dateUtils.js","components/Info.jsx","components/Header.jsx","API.js","redux/point-reducer.js","components/No-events.jsx","components/event/eventForm/DestinationsEdit.jsx","components/Offer.jsx","components/event/Event.jsx","components/event/eventForm/EventType.jsx","components/event/eventForm/DestinationDescription.jsx","components/event/eventForm/OffersEdit.jsx","components/TextError.jsx","components/event/eventForm/EventForm.jsx","components/event/EventEdit.jsx","components/event/EventContainer.jsx","components/eventDay/Event-day.jsx","components/eventDay/EventDayContainer.js","components/Sort.jsx","components/event/SortingEvents.jsx","components/event/NewEvent.jsx","components/EventsContainer.jsx","App.js","reportWebVitals.js","redux/redux-store.js","index.js"],"names":["NAME_DATE_TYPE","castTimeFormat","value","MONTH","convertDate","date","type","date2","Date","getUTCFullYear","getUTCMonth","getUTCDate","getUTCHours","getUTCMinutes","getTime","duration","days","hours","minutes","Info","props","uniqueTowns","Array","from","Set","points","map","point","destination","name","totalPrice","forEach","offers","offer","price","base_price","sortedEvents","sort","a","b","date_from","firstDate","lastDate","length","className","join","Header","console","log","src","width","height","alt","dates","towns","onClick","newEventToggle","disabled","newEventEdit","instance","axios","baseURL","headers","api","get","id","data","put","post","initialState","destinations","isSendingData","editMode","serverError","setUpdatePoint","onSendingData","offSendingData","offEditMode","mode","NoEvents","React","Component","getEventTitle","charAt","toUpperCase","slice","DestinationsEdit","array","form","htmlFor","values","as","town","index","Offer","title","Event","dateTime","onEditMode","EventType","eventType","getMarkupTypesFormik","toLowerCase","DestinationDescription","find","eventTown","description","pictures","photo","OffersEdit","field","off","split","TextError","children","EventForm","initialValues","validationSchema","Yup","required","nullable","date_to","min","onSubmit","setSubmitting","onSubmitForm","obj","selectedOffers","filter","Number","toISOString","toString","is_favorite","submitHandle","onReset","onResetForm","setFieldValue","selected","onChange","val","dateFormat","component","some","viewBox","d","EventEdit","initialValuesOffersAll","reduce","object","pointOffer","updatePoint","EventContainer","EventDay","eventContainers","countDay","dateText","EventDayContainer","day","text","Sort","sortFormMarkup","defaultChecked","sortType","sortTypeToggle","SortingEvents","NewEvent","templatePoint","addPoint","EventsContainer","useState","setSortType","App","this","getPoints","getOffers","getDestinations","connect","state","eventsPage","dispatch","response","status","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","reducers","combineReducers","action","copyState","p","concat","datetime","i","store","createStore","applyMiddleware","thunkMiddleware","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.ad31aa84.chunk.js","sourcesContent":["export const NAME_DATE_TYPE = {\n    DATETIME: 'DATETIME',\n    MONTH_DAY: 'MONTH DAY',\n    MONTH_DAY_YEAR: 'MONTH DAY YEAR',\n    TIMESTAMP: 'TIMESTAMP',\n    DURATION: 'DURATION',\n    DURATION_TIMESTAMP:'DURATION TIMESTAMP',\n    TIME: 'TIME',\n    FULL_DATE: 'FULL DATE'\n\n}\nconst castTimeFormat = (value) => {\n    return value < 10 ? `0${value}` : value;\n};\n\nexport const MONTH = [`jan`, `feb`, `mar`, `apr`, `may`, `jun`, `jul`, `aug`, `sep`, `oct`, `nov`, `dec`];\n\nexport const convertDate = (date, type, date2='') => {\n    switch (type) {\n        case 'DATETIME': {\n            return `${new Date(date).getUTCFullYear()}/${new Date(date).getUTCMonth() + 1}/${new Date(date).getUTCDate()}`\n        }\n        case 'TIME': {\n            return `${castTimeFormat(new Date(date).getUTCHours())}:${castTimeFormat(new Date(date).getUTCMinutes())}`\n        }\n        case 'TIMESTAMP': {\n            return `${new Date(date).getTime()}`\n        }\n        case 'MONTH DAY': {\n            return `${MONTH[new Date(date).getUTCMonth()]} ${new Date(date).getUTCDate()}`;\n        }\n        case 'FULL DATE': {\n            return `${new Date(date).getUTCDate()}/${MONTH[new Date(date).getUTCMonth()]}/${new Date(date).getUTCFullYear()}`;\n        }\n        case 'DURATION': {\n            let duration = new Date(date2) - new Date(date);\n            let days = new Date(duration).getUTCDate()-1;\n            let hours = new Date(duration).getUTCHours();\n            let minutes = new Date(duration).getUTCMinutes()\n            return `${days? days+'D':''} ${hours? hours+'H':''} ${minutes? minutes+'M':''}`\n        }\n        case 'DURATION TIMESTAMP': {\n            return  (new Date(date2).getTime() - new Date(date).getTime());\n\n\n        }\n    }\n}\n\n\n","import {convertDate, NAME_DATE_TYPE} from \"../utils/dateUtils\";\n\nconst Info = (props) => {\n    const uniqueTowns = Array.from(new Set(props.points.map(point => point.destination.name)));\n    let totalPrice= 0;\n    props.points.forEach(point => {\n       point.offers.forEach(offer =>  totalPrice+= offer.price)\n        return  totalPrice += point.base_price;\n    });\nconst sortedEvents  = [...props.points].sort((a, b) => convertDate(a.date_from, NAME_DATE_TYPE.TIMESTAMP) > convertDate(b.date_from, NAME_DATE_TYPE.TIMESTAMP) ? 1 : -1);\nconst firstDate = convertDate(sortedEvents[0].date_from, NAME_DATE_TYPE.MONTH_DAY);\nconst lastDate = convertDate(sortedEvents[sortedEvents.length-1].date_from, NAME_DATE_TYPE.MONTH_DAY);\n    return(\n        <section className=\"trip-main__trip-info  trip-info\">\n            <div className=\"trip-info__main\">\n                <h1 className=\"trip-info__title\">{uniqueTowns.join(` - `)}</h1>\n\n                <p className=\"trip-info__dates\">{firstDate}&nbsp;&mdash;&nbsp;{lastDate}</p>\n            </div>\n\n            <p className=\"trip-info__cost\">\n                Total: &euro;&nbsp;<span className=\"trip-info__cost-value\">{totalPrice}</span>\n            </p>\n        </section>\n    )\n}\nexport default Info\n\n","import React from \"react\";\nimport Info from \"./Info\";\n\n\nconst Header =(props)=> {\n    console.log(props)\n        return (\n            <header className=\"page-header\">\n                <div className=\"page-body__container  page-header__container\">\n                    <img className=\"page-header__logo\" src=\"img/logo.png\" width=\"42\" height=\"42\" alt=\"Trip logo\"/>\n\n                    <div className=\"trip-main\">\n                        {(props.dates && props.towns && props.offers) ? <Info {...props}/>: ''}\n                        <button className=\"trip-main__event-add-btn  btn  btn--big  btn--yellow\" type=\"button\"\n                                onClick={()=> props.newEventToggle(true)} disabled={props.newEventEdit}\n                        >New event</button>\n                    </div>\n                </div>\n            </header>\n        )\n\n}\nexport default Header\n","import * as axios from \"axios\";\n\nconst instance = axios.create({\n    baseURL: 'https://htmlacademy-es-10.appspot.com/big-trip/',\n    headers: {\n        \"Authorization\": \"Basic dgddgjsakdlidjiednk\",\n        \"Content-Type\": `application/json`\n    }\n})\nexport const api = {\n    getDestinations: () => {\n        return instance.get('destinations')\n    },\n    getOffers: () => {\n        return instance.get('offers')\n    },\n    getPoints: () => {\n        return instance.get('points')\n    },\n    updatePoint: (id, data) => {\n        return instance.put(`points/${id}`, data)\n    },\n    addPoint: (data) => {\n        return instance.post(`points`, data)\n    },\n    deletePoint: (id) => {\n        return instance.delete(`points/point${id}`)\n    },\n    createPoint: () => {\n        return instance.post(`points/}`)\n    }\n}\n","import {api} from \"../API\";\nimport {NAME_DATE_TYPE, convertDate} from \"../utils/dateUtils\";\n\n\nconst SET_POINTS = 'SET POINTS';\nconst ADD_POINT = 'ADD POINT';\nconst UPDATE_POINT = 'UPDATE POINT';\nconst SET_DATES = 'SET DATES';\nconst SET_DESTINATIONS = 'SET DESTINATIONS';\nconst SET_OFFERS = 'SET OFFERS';\nconst ON_SENDING_DATA = 'ON SENDING DATA';\nconst OFF_SENDING_DATA = 'OFF SENDING DATA';\nconst ON_EDIT_MODE = 'ON EDIT MODE';\nconst OFF_EDIT_MODE = 'OFF EDIT MODE';\nconst SET_NEW_EVENT = 'SET NEW EVENT';\n\n\nconst initialState = {\n    points: null,\n    dates: null,\n    destinations: null,\n    offers: null,\n    newEventEdit: false,\n    isSendingData: [],\n    editMode: [],\n    serverError: []\n}\n\n\nconst setPoints = (points) => ({type: SET_POINTS, points});\nconst setNewPoint = (point) => ({type: ADD_POINT, point});\nconst setUpdatePoint = (id, data) => ({type: UPDATE_POINT, id, data});\nconst setDestinations = (destinations) => ({type: SET_DESTINATIONS, destinations});\nconst setOffers = (offers) => ({type: SET_OFFERS, offers});\nconst setDates = () => ({type: SET_DATES});\nconst onSendingData = (id) => ({type: ON_SENDING_DATA, id});\nconst offSendingData = (id) => ({type: OFF_SENDING_DATA, id});\nexport const onEditMode = (id) => ({type: ON_EDIT_MODE, id});\nexport const offEditMode = (id) => ({type: OFF_EDIT_MODE, id});\nexport const newEventToggle = (mode) => ({type: SET_NEW_EVENT, mode});\n\n\nexport const pointsReducer = (state = initialState, action) => {\n    if (!state) {\n        return {};\n    }\n    switch (action.type) {\n        case 'SET POINTS': {\n            let copyState = {...state, points: [...action.points]};\n            copyState.points.forEach((p, index) => {\n                p = {...action.points[index]};\n                p.destination = {...action.points[index].destination}\n            });\n            return copyState;\n        }\n        case 'ADD POINT': {\n            return {...state, points: [...state.points.concat(action.point)]};\n        }\n        case 'UPDATE POINT': {\n            return {...state, points: [...state.points.filter(point => point.id !== action.id).concat(action.data)]};\n        }\n        case 'SET DATES':\n            let datetime = Array.from(new Set(state.points.map((p) => {\n                return convertDate(p['date_from'], NAME_DATE_TYPE.DATETIME);\n            })));\n            let dates = Array.from(new Set(state.points.map((p) => {\n                return convertDate(p['date_from'], NAME_DATE_TYPE.MONTH_DAY);\n            })));\n            let copyState = {...state};\n            copyState.dates = dates.map((d, i) => {\n                return {text: d, dateTime: datetime[i]}\n            });\n            return copyState;\n        case 'SET DESTINATIONS':\n            return {...state, destinations: action.destinations};\n        case 'SET OFFERS':\n            return {...state, offers: action.offers};\n        case 'ON SENDING DATA':\n            return {...state, isSendingData: state.isSendingData.concat(action.id)};\n        case 'OFF SENDING DATA':\n            return {...state, isSendingData: state.isSendingData.filter(id => id !== action.id)};\n        case 'ON EDIT MODE':\n            return {...state, editMode: state.editMode.concat(action.id)};\n        case 'OFF EDIT MODE':\n            return {...state, editMode: state.editMode.filter(id => id !== action.id)};\n        case 'SET NEW EVENT':\n            return {...state, newEventEdit: action.mode}\n        default:\n            return state;\n    }\n}\n\nexport const getPoints = () => async (dispatch) => {\n    const response = await api.getPoints();\n    dispatch(setPoints(response.data));\n    dispatch(setDates())\n}\nexport const getDestinations = () => async (dispatch) => {\n    const response = await api.getDestinations()\n    dispatch(setDestinations(response.data))\n}\nexport const getOffers = () => async (dispatch) => {\n    const response = await api.getOffers()\n    dispatch(setOffers(response.data))\n}\nexport const updatePoint = (id, data) => async (dispatch) => {\n    dispatch(onSendingData(id))\n    const response = await api.updatePoint(id, data)\n    if (response.status === 200) {\n        dispatch(setUpdatePoint(id, response.data));\n        dispatch(setDates());\n        dispatch(offSendingData(id))\n        dispatch(offEditMode(id))\n    }\n}\nexport const addPoint = (id, data) => async (dispatch) => {\n    dispatch(onSendingData(id))\n    const response = await api.addPoint(data);\n    if (response.status === 200) {\n        dispatch(setNewPoint(response.data));\n        dispatch(setDates());\n        dispatch(offSendingData(id))\n        dispatch(newEventToggle(false))\n    }\n}\n\n","import React from \"react\";\n\n\n\nexport default class NoEvents extends React.Component {\n    render() {\n        return (\n            <li className=\"trip-events__msg\">Click New Event to create your first point</li>\n        )\n    }\n}\n","import React from \"react\";\nimport {Field} from 'formik'\n\nexport const getEventTitle = (type) => {\n    if(type==='sightseeing'||type==='check-in'||type==='restaurant'){\n        return(type.charAt(0).toUpperCase() + type.slice(1) + ' in ')\n    } else {\n        return(type.charAt(0).toUpperCase() + type.slice(1) + ' to ')\n    }\n};\n\n\nconst DestinationsEdit = (props) => {\n\n\n    const getDestination = (array) => {\n        return array.map((town, index) => <option value={town.name} key={props.id + index}>{town.name}</option>)\n    }\n        return (\n            <div>\n                <Field>\n                    {({form}) => {\n                        return <label className=\"event__label  event__type-output\" htmlFor={`eventDay-destination-${props.id}`}>\n                            {getEventTitle(form.values.type)}\n                        </label>\n                    }}\n                </Field>\n\n                <Field name='eventTown' as='select'  className=\"event__input  event__input--destination\" id={`eventDay-destination-${props.id}`}>\n                    {getDestination(props.towns)}\n                </Field>\n            </div>\n        )\n}\nexport default  DestinationsEdit;\n","import React from \"react\";\n\n\n\nconst Offer = (props) => {\n        return (\n            <li className=\"event__offer\">\n                <span className=\"event__offer-title\">{props.title} </span>\n                    &#43;\n                &euro;&nbsp;<span className=\"event__offer-price\">{props.price}</span>\n            </li>\n        )\n}\nexport default Offer;\n","import React from \"react\";\nimport {convertDate, NAME_DATE_TYPE} from \"../../utils/dateUtils\";\nimport {getEventTitle} from './eventForm/DestinationsEdit'\nimport Offer from '../Offer'\n\n\nconst Event = (props) => {\n\n    let offers = props.point.offers.map((offer, index) => {\n        return <Offer title={offer.title} price={offer.price} key={index}/>\n    })\n    return (\n        <div className=\"event\">\n            <div className=\"event__type\">\n                <img className=\"event__type-icon\" width=\"42\" height=\"42\"\n                     src={`img/icons/${props.point.type}.png`}\n                     alt=\"Event type icon\"/>\n            </div>\n            <h3 className=\"event__title\">{getEventTitle(props.point.type)+' '+props.point.destination.name}</h3>\n\n            <div className=\"event__schedule\">\n                <p className=\"event__time\">\n                    <time className=\"event__start-time\"\n                          dateTime={props.point['date_from']}>{convertDate(props.point['date_from'], NAME_DATE_TYPE.TIME)}</time>\n                    &mdash;\n                    <time className=\"event__end-time\"\n                          dateTime={props.point['date_to']}>{convertDate(props.point['date_to'], NAME_DATE_TYPE.TIME)}</time>\n                </p>\n                <p className=\"event__duration\">{convertDate(props.point['date_from'], NAME_DATE_TYPE.DURATION, props.point['date_to'])}</p>\n            </div>\n\n            <p className=\"event__price\">\n                &euro;&nbsp;<span className=\"event__price-value\">{props.point['base_price']}</span>\n            </p>\n\n            <h4 className=\"visually-hidden\">Offers:</h4>\n            <ul className=\"event__selected-offers\">\n                {offers}\n            </ul>\n\n            <button className=\"event__rollup-btn\" type=\"button\" onClick={() => props.onEditMode(props.point.id)}>\n                <span className=\"visually-hidden\" >Open event</span>\n            </button>\n        </div>\n    )\n}\nexport default Event\n","import React from \"react\";\nimport {Field} from \"formik\";\n\n\nconst EventType = (props) => {\n    const eventType = {\n        transfer: ['Bus','Drive','Flight','Ship','Taxi','Train','Transport'],\n        activity:['Check-in', 'Sightseeing', 'Restaurant']\n    };\n\n    const getMarkupTypesFormik = (array)=>{\n        return array.map((type, index)=>{\n            return(\n                <div className=\"event__type-item\" key={index}>\n                    <Field id={`event-type-${type.toLowerCase()}-${index+props.id}`}\n                           value={type.toLowerCase()}\n                           className=\"event__type-input  visually-hidden\"\n                           type=\"radio\"\n                           name=\"type\" />\n                    <label className={`event__type-label  event__type-label--${type.toLowerCase()}`}\n                           htmlFor={`event-type-${type.toLowerCase()}-${index+props.id}`}>{type}</label>\n                </div>\n            )\n        })\n    }\n    return (\n        <div className=\"event__type-wrapper\">\n            <label className=\"event__type  event__type-btn\" htmlFor={`eventDay-type-toggle-${props.id}`}>\n                <span className=\"visually-hidden\">Choose eventDay type</span>\n                <Field>\n                    {({form}) => {\n                            return <img className=\"event__type-icon\" width=\"17\" height=\"17\"\n                                         src={`img/icons/${form.values.type}.png`} alt=\"Event type icon\"/>\n                        }}\n                </Field>\n            </label>\n            <input name='eventTypeToggle' className=\"event__type-toggle  visually-hidden\" id={`eventDay-type-toggle-${props.id}`}\n                   type=\"checkbox\"/>\n            <div className=\"event__type-list\">\n                <fieldset className=\"event__type-group\">\n                    <legend className=\"visually-hidden\">Transfer</legend>\n                    {getMarkupTypesFormik(eventType.transfer)}\n                </fieldset>\n                <fieldset className=\"event__type-group\">\n                    <legend className=\"visually-hidden\">Activity</legend>\n                    {getMarkupTypesFormik(eventType.activity)}\n                </fieldset>\n            </div>\n        </div>\n    )\n}\nexport default EventType;\n","import React from 'react'\nimport {Field} from \"formik\";\n\n\nconst DestinationDescription = (props) => {\n    return (\n        <section className=\"event__section  event__section--destination\">\n            <h3 className=\"event__section-title  event__section-title--destination\">Destination</h3>\n            <Field>\n                {({form}) => {\n                    let town = props.towns.find(town => town.name === form.values.eventTown );\n                    return <p className=\"event__destination-description\">{town.description}</p>\n                }}\n            </Field>\n            <div className=\"event__photos-container\">\n                <div className=\"event__photos-tape\">\n                    <Field>\n                        {({form}) => {\n                            let town = props.towns.find( town => town.name === form.values.eventTown );\n\n                            return town.pictures.map((photo, index) => {\n                                return <img className=\"event__photo\" src={photo.src} alt={photo.description}\n                                            key={index}/>\n                            })\n                        }}\n                    </Field>\n                </div>\n            </div>\n        </section>\n    )\n}\n\nexport default DestinationDescription\n","import React from \"react\";\nimport {Field} from 'formik';\n\n\nconst OffersEdit = (props) => {\n        return (\n            <section className=\"event__section  event__section--offers\">\n                <h3 className=\"event__section-title  event__section-title--offers\">Offers</h3>\n                <div className=\"event__available-offers\">\n                    <Field>\n                        {({field, form}) => {\n                            const offers = props.offers.find(off => off.type === form.values.type).offers;\n                            field.name = `offers`;\n                            if (offers.length){\n                            return offers.map((offer, index) => {\n                                return (\n                                    <div className=\"event__offer-selector\" key={index}>\n                                        <Field className=\"event__offer-checkbox  visually-hidden\"\n                                               id={offer.title.split(' ').join('_') + props.point.id}\n                                               type=\"checkbox\"\n                                               name={`offers.${form.values.type}.${offer.title.split(' ').join('_')}`}/>\n                                        <label className=\"event__offer-label\" htmlFor={offer.title.split(' ').join('_') + props.point.id}>\n                                            <span className=\"event__offer-title\">{offer.title}</span>\n                                            &#43;\n                                            &euro;&nbsp;<span className=\"event__offer-price\">{offer.price}</span>\n                                        </label>\n                                    </div>\n                                )\n                            })} else {\n                                return <span>No available offers</span>\n                            }\n\n                        }}\n                    </Field>\n                </div>\n            </section>\n        )\n\n}\nexport default OffersEdit;\n\n","import React from \"react\";\n\n\nexport const TextError = (props) => {\n    return (\n        <div className=\"error\">\n            {props.children}\n        </div>\n    )\n}\n\n","import React from \"react\";\nimport EventType from \"./EventType\";\nimport DestinationsEdit from \"./DestinationsEdit\";\nimport DestinationDescription from \"./DestinationDescription\";\nimport {Formik, Field, Form, ErrorMessage} from 'formik';\nimport * as Yup from 'yup';\nimport OffersEdit from \"./OffersEdit\";\nimport {TextError} from '../../TextError';\nimport DatePicker from \"react-datepicker\";\nimport 'react-datepicker/dist/react-datepicker.css'\n\n\nconst EventForm = (props) => {\n    const submitHandle = (obj) => {\n        const destination = props.towns.find(town => town.name === obj.eventTown);\n        const offersPoint = props.offers.find(offer => offer.type === obj.type);\n        const selectedOffers = offersPoint.offers.filter((offer) => {\n            return obj.offers[obj.type][offer.title.split(' ').join('_')]\n        });\n        return {\n            base_price: Number(obj.base_price),\n            date_from: new Date(obj.date_from).toISOString(),\n            date_to: new Date(obj.date_to).toISOString(),\n            destination,\n            id: props.point.id.toString(),\n            is_favorite: obj.is_favorite,\n            offers: selectedOffers,\n            type: obj.type\n        }\n    }\n    return (\n        <Formik\n            initialValues={props.initialValues}\n            validationSchema={Yup.object({\n                eventTown: Yup.string()\n                    .required('Required'),\n                date_from: Yup.date()\n                    /*.min(new Date(),\"This day is already in the past\")*/\n                    .required('Required')\n                    .nullable(),\n                date_to: Yup.date()\n                    .min(Yup.ref('date_from'), 'End date cannot be earlier than start date')\n                    .required('Required')\n                    .nullable(),\n                base_price: Yup.number()\n                    .min(1,'Indicate the price')\n                    .required('Required'),\n            })}\n            onSubmit={(values, {setSubmitting}) => {\n\n                props.onSubmitForm(submitHandle(values));\n                setSubmitting(false)\n            }}\n            onReset={() => props.onResetForm()}\n        >\n            <Form className=\"trip-events__item  event  event--edit\" id=\"form\">\n                <header className=\"event__header\">\n                    <EventType type={props.point.type} id={props.point.id}/>\n                    <DestinationsEdit towns={props.towns} id={props.point.id}/>\n                    <div className=\"event__field-group  event__field-group--time\">\n                        <label className=\"visually-hidden\" htmlFor={`eventDay-start-time-${props.point.id}`}>\n                            From\n                        </label>\n                        <div className={'error_container'}>\n                            <Field className=\"event__input  event__input--time\"\n                                   id={`eventDay-start-time-${props.point.id}`}\n                                   name=\"date_from\" type=\"text\">\n                                {({form, field}) => {\n                                    const {setFieldValue} = form;\n                                    const {value} = field;\n                                    return (\n                                        <DatePicker\n                                            id=\"date_from\"\n                                            {...field}\n                                        selected={value}\n                                            onChange={val=> setFieldValue(field.name, val)}\n                                            dateFormat=\"yyyy/MM/dd hh:mm aa\"\n                                        />\n                                    )\n                                }\n\n                                }\n                            </Field>\n                            <ErrorMessage name=\"date_from\" component={TextError}/>\n                        </div>\n                        &mdash;\n                        <label className=\"visually-hidden\" htmlFor={`eventDay-end-time-${props.point.id}`}>\n                            To\n                        </label>\n                        <div className={'error_container'}>\n                            <Field className=\"event__input  event__input--time\"\n                                   id={`eventDay-end-time-${props.point.id}`}\n                                   type=\"text\"\n                                   name=\"date_to\">\n                                {({form, field}) => {\n                                    const {setFieldValue} = form;\n                                    const {value} = field;\n                                    return (\n                                        <DatePicker\n                                            id=\"date_to\"\n                                            {...field}\n                                            selected={value}\n                                            onChange={val=> setFieldValue(field.name, val)}\n                                            dateFormat=\"yyyy/MM/dd hh:mm aa\"\n                                        />\n                                    )\n                                }\n                                }\n\n                            </Field>\n                            <ErrorMessage name=\"date_to\" component={TextError}/>\n                        </div>\n                    </div>\n                    <div className=\"event__field-group  event__field-group--price\">\n                        <label className=\"event__label\" htmlFor={`eventDay-price-${props.point.id}`}>\n                            <span className=\"visually-hidden\">Price</span>\n                            &euro;\n                        </label>\n                        <div className={'error_container'}>\n                            <Field className=\"event__input  event__input--price\" id={`eventDay-price-${props.point.id}`}\n                                   type=\"text\"\n                                   name=\"base_price\"/>\n                            <ErrorMessage name=\"base_price\" component={TextError}/>\n                        </div>\n                    </div>\n                    <button className=\"event__save-btn  btn  btn--blue\" type=\"submit\"\n                            disabled={props.isSendingData.some(id => id === props.point.id)}>{props.isSendingData.some(id => id === props.point.id) ? 'Saving...' : 'Save'}</button>\n                    <button className=\"event__reset-btn\" type=\"reset\"\n                            disabled={props.isSendingData.some(id => id === props.point.id)}>Cancel\n                    </button>\n                    <Field id={`eventDay-favorite-${props.point.id}`}\n                           className=\"event__favorite-checkbox  visually-hidden\"\n                           type=\"checkbox\" name=\"is_favorite\"/>\n                    <label className=\"event__favorite-btn\" htmlFor={`eventDay-favorite-${props.point.id}`}>\n                        <span className=\"visually-hidden\">Add to favorite</span>\n                        <svg className=\"event__favorite-icon\" width=\"28\" height=\"28\" viewBox=\"0 0 28 28\">\n                            <path\n                                d=\"M14 21l-8.22899 4.3262 1.57159-9.1631L.685209 9.67376 9.8855 8.33688 14 0l4.1145 8.33688 9.2003 1.33688-6.6574 6.48934 1.5716 9.1631L14 21z\"/>\n                        </svg>\n                    </label>\n                </header>\n                <section className=\"event__details\">\n                    <OffersEdit point={props.point} offers={props.offers}/>\n                    <DestinationDescription towns={props.towns}/>\n                </section>\n            </Form>\n        </Formik>\n    )\n}\nexport default EventForm\n\n","import React from \"react\";\nimport EventForm from \"./eventForm/EventForm\";\n\n\n\nconst EventEdit = (props) => {\n    console.log(props)\n\n    const initialValuesOffersAll = props.offers.reduce((object, off) => {\n        const offers = off.offers.reduce((obj, offer) => {\n            let name = offer.title.split(' ').join('_');\n            let value = props.point.offers.some(pointOffer => pointOffer.title === offer.title);\n            return {...obj, [name]: value}\n        }, {});\n\n        return {...object, [off.type]: offers}\n    }, {});\n\n\n    const initialValues = {\n        type: props.point.type,\n        eventTown: props.point.destination.name,\n        date_from: new Date(props.point.date_from),\n        date_to: new Date(props.point.date_to),\n        base_price: props.point.base_price,\n        is_favorite: props.point.is_favorite,\n        offers: {...initialValuesOffersAll}\n    }\n\n    const onSubmitForm = (data) => {\n        props.updatePoint(props.point.id, data);\n    }\n    const onResetForm = () => {\n        props.offEditMode(props.point.id);\n    }\n\n\n    return <EventForm {...props} onSubmitForm={onSubmitForm} onResetForm={onResetForm} initialValues={initialValues}/>\n}\nexport default EventEdit\n","import React, {useState} from \"react\";\nimport Event from \"./Event\";\nimport EventEdit from \"./EventEdit\";\n\n\nconst EventContainer = (props) => {\n\n    return (\n        <li className=\"trip-events__item\">\n            {props.editMode.some(id => id === props.point.id)? <EventEdit {...props} /> : <Event {...props}/>}\n        </li>\n    )\n}\nexport default EventContainer\n","import React from \"react\";\nimport EventContainer from \"../event/EventContainer\";\n\n\nconst EventDay = (props) => {\n    const sortingPoints = props.points.sort((a, b) => new Date(a.date_from) - new Date(b.date_from))\n    let eventContainers = sortingPoints.map((point, index) => {\n        return <EventContainer key={point.id + index}\n                               point={point}\n                               towns={props.towns}\n                               offers={props.offers}\n                               editMode={props.editMode}\n                               isSendingData={props.isSendingData}\n                               updatePoint={props.updatePoint}\n                               onEditMode={props.onEditMode}\n                               offEditMode={props.offEditMode}\n                               onSendingData={props.onSendingData}\n                               offSendingData={props.offSendingData}/>\n    });\n    return (\n        <li className=\"trip-days__item  day\">\n            <div className=\"day__info\">\n                <span className=\"day__counter\">{props.countDay}</span>\n                <time className=\"day__date\" dateTime={props.dateTime}>{props.dateText}</time>\n            </div>\n            <ul className=\"trip-events__list\">\n                {eventContainers}\n            </ul>\n        </li>\n    )\n}\nexport default EventDay\n","import React from 'react';\nimport EventDay from \"./Event-day\";\nimport {convertDate, NAME_DATE_TYPE} from '../../utils/dateUtils';\nimport {offEditMode, offSendingData, onSendingData} from \"../../redux/point-reducer\";\n\nconst EventDayContainer = (props) => {\n    let sortingDates = [...props.dates].sort((a, b) => new Date(a.dateTime) - new Date(b.dateTime));\n    let days = sortingDates.map((day, index) => {\n        const sortingPoints = [...props.points]\n        let points = sortingPoints.filter((point) => {\n            return convertDate(point.date_from, NAME_DATE_TYPE.DATETIME) === day.dateTime;\n        })\n        return <EventDay key={index}\n                         countDay={index + 1}\n                         dateText={day.text}\n                         dateTime={day.dateTime}\n                         points={points}\n                         towns={props.towns}\n                         offers={props.offers}\n                         editMode={props.editMode}\n                         isSendingData={props.isSendingData}\n                         updatePoint={props.updatePoint}\n                         onEditMode={props.onEditMode}\n                         offEditMode={props.offEditMode}/>\n    })\n    return <ul className=\"trip-days\">{days}</ul>\n}\n\nexport default EventDayContainer;\n","import React from \"react\";\n\n\nconst Sort = (props) => {\n    const sortTypes = ['Event', 'Time', 'Price'];\n\n    const sortFormMarkup = sortTypes.map((type, index)=>{\n        return (\n            <div key={index} className={`trip-sort__item  trip-sort__item--${type.toLowerCase()}`}>\n                <input id={`sort-${type.toLowerCase()}`} className=\"trip-sort__input  visually-hidden\" type=\"radio\" name=\"trip-sort\"\n                       value={`sort-${type.toLowerCase()}`} defaultChecked={type === props.sortType} onChange={()=> props.sortTypeToggle(type)}/>\n                <label className=\"trip-sort__btn\" htmlFor={`sort-${type.toLowerCase()}`}>\n                    {type}\n                    <svg className=\"trip-sort__direction-icon\" width=\"8\" height=\"10\" viewBox=\"0 0 8 10\">\n                        <path\n                            d=\"M2.888 4.852V9.694H5.588V4.852L7.91 5.068L4.238 0.00999987L0.548 5.068L2.888 4.852Z\"/>\n                    </svg>\n                </label>\n            </div>\n        )\n    })\n    return (\n        <form className=\"trip-events__trip-sort  trip-sort\">\n            <span className=\"trip-sort__item  trip-sort__item--day\">Day</span>\n\n            {sortFormMarkup}\n\n            <span className=\"trip-sort__item  trip-sort__item--offers\">Offers</span>\n        </form>\n    )\n};\n\nexport default Sort\n","import React from 'react';\nimport {convertDate, NAME_DATE_TYPE} from '../../utils/dateUtils';\nimport EventContainer from \"./EventContainer\";\n\n\nconst SortingEvents = (props) => {\n    let sortedEvents;\n\n    if (props.sortType === 'Time') {\n        sortedEvents = [...props.points].sort((a, b) =>  convertDate(a.date_from, NAME_DATE_TYPE.DURATION_TIMESTAMP,a.date_to) < convertDate(b.date_from, NAME_DATE_TYPE.DURATION_TIMESTAMP,b.date_to) ? 1 : -1);\n    } else if (props.sortType === 'Price') {\n        sortedEvents = [...props.points].sort((a, b) => a.base_price > b.base_price ? 1 : -1);\n    }\n\n\n    const eventContainers = sortedEvents.map((point) => {\n        return <EventContainer key={point.id}\n                               point={point}\n                               towns={props.towns}\n                               offers={props.offers}\n                               updatePoint={props.updatePoint}\n                               isSendingData={props.isSendingData}\n                               editMode={props.editMode}\n                               onEditMode={props.onEditMode}/>\n    })\n\n    return (\n        <ul className=\"trip-days\">\n        <li className=\"trip-days__item  day\">\n            <div className=\"day__info\">\n            </div>\n            <ul className=\"trip-events__list\">\n                {eventContainers}\n            </ul>\n        </li>\n    </ul>\n    )}\n\nexport default SortingEvents;\n","import React from \"react\";\nimport {convertDate, NAME_DATE_TYPE} from \"../../utils/dateUtils\";\nimport {getEventTitle} from './eventForm/DestinationsEdit'\nimport Offer from '../Offer'\nimport EventForm from \"./eventForm/EventForm\";\nimport {pointsReducer} from \"../../redux/point-reducer\";\n\n\nconst NewEvent = (props) => {\n    console.log(props)\n    const initialValuesOffersAll = props.offers.reduce((object, off) => {\n        const offers = off.offers.reduce((obj, offer) => {\n            let name = offer.title.split(' ').join('_');\n            return {...obj, [name]: false}\n        }, {});\n\n        return {...object, [off.type]: offers}\n    }, {});\n\n    const templatePoint = {\n        id: props.points.length,\n        type: 'drive'\n    }\n    const initialValues = {\n        type: 'drive',\n        eventTown: props.towns[0].name,\n        date_from: new Date(),\n        date_to: new Date(),\n        base_price: '',\n        is_favorite: false,\n        offers: {...initialValuesOffersAll}\n    }\n\n    const onSubmitForm = (data) => {\n        props.addPoint(templatePoint.id, data)\n    }\n    const onResetForm = () => {\n        props.newEventToggle(false);\n    }\n\n    return (\n        <EventForm initialValues={initialValues} onSubmitForm={onSubmitForm} onResetForm={onResetForm} isSendingData={props.isSendingData} point={templatePoint} towns={props.towns} offers={props.offers} />\n    )\n}\nexport default NewEvent\n","import React, {useState} from 'react';\nimport EventDayContainer from \"./eventDay/EventDayContainer\";\nimport Sort from \"./Sort\";\nimport SortingEvents from \"./event/SortingEvents\";\nimport NewEvent from \"./event/NewEvent\";\n\n\nconst EventsContainer = (props) => {\nconst [sortType, setSortType] = useState('Event');\n\nconst sortTypeToggle = (type)=>{\n    if (type === sortType) {\n        return\n    }\n    setSortType(type)\n}\n\n    return (\n        <>\n            <Sort sortTypeToggle={sortTypeToggle} sortType={sortType}/>\n            {props.newEventEdit? <NewEvent{...props}/> : null}\n            {sortType === 'Event'? <EventDayContainer {...props}/> :  <SortingEvents {...props} sortType={sortType}/>}\n        </>\n    )\n}\n\nexport default EventsContainer;\n","import React from \"react\";\nimport Header from \"./components/Header\";\nimport {connect} from \"react-redux\";\nimport {\n    getDestinations,\n    getOffers,\n    getPoints,\n    updatePoint,\n    addPoint,\n    onEditMode,\n    offEditMode,\n    newEventToggle\n} from \"./redux/point-reducer\";\nimport NoEvents from \"./components/No-events\";\nimport EventsContainer from \"./components/EventsContainer\";\n\nclass App extends React.Component {\n    componentDidMount() {\n        this.props.getPoints();\n        this.props.getOffers();\n        this.props.getDestinations();\n    }\n\n    render() {\n        return (\n            <div className=\"App\">\n                <Header {...this.props}/>\n                <main className=\"page-body__page-main  page-main\">\n                    <div className=\"page-body__container\">\n                        <section className=\"trip-events\">\n                            <h2 className=\"visually-hidden\">Trip events</h2>\n                            {(this.props.dates && this.props.towns && this.props.offers) ?\n                                <EventsContainer {...this.props}/> : <NoEvents/>}\n                        </section>\n                    </div>\n                </main>\n            </div>\n        )\n    }\n}\n\nlet mapStateToProps = (state) => {\n    return {\n        points: state.eventsPage.points,\n        dates: state.eventsPage.dates,\n        towns: state.eventsPage.destinations,\n        offers: state.eventsPage.offers,\n        isSendingData: state.eventsPage.isSendingData,\n        editMode: state.eventsPage.editMode,\n        newEventEdit: state.eventsPage.newEventEdit\n    }\n}\n\n\nexport default connect(mapStateToProps, {\n    getPoints,\n    getDestinations,\n    getOffers,\n    updatePoint,\n    addPoint,\n    onEditMode,\n    offEditMode,\n    newEventToggle\n})(App);\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {applyMiddleware,combineReducers, createStore} from \"redux\";\nimport {pointsReducer} from './point-reducer';\nimport thunkMiddleware from \"redux-thunk\";\n\n\nlet reducers =\n    combineReducers({\n    eventsPage: pointsReducer\n});\nlet store = createStore(reducers, applyMiddleware(thunkMiddleware));\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport {BrowserRouter} from \"react-router-dom\";\nimport {Provider} from \"react-redux\";\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport store from './redux/redux-store'\n\n\nReactDOM.render(\n    <BrowserRouter>\n        <Provider store={store}>\n            <App/>\n        </Provider>\n    </BrowserRouter>\n    ,\n    document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}